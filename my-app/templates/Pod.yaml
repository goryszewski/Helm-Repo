---
apiVersion: v1
kind: Pod
metadata:
  name: redis
  labels:
    app: redis
spec:
  containers:
    - name: redis
      image: redis:latest
      command:
        - redis-server
        - "/redis-master/redis.conf"
      env:
        - name: MASTER
          value: "true"
      ports:
        - containerPort: 6379
      resources:
        limits:
          cpu: "0.1"
      volumeMounts:
        - mountPath: /redis-master-data
          name: data
        - mountPath: /redis-master
          name: config
  volumes:
    - name: data
      emptyDir: {}
    - name: config
      configMap:
        name: cp-redis-config
        items:
          - key: redis-config
            path: redis.conf

---
apiVersion: v1
kind: Pod
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  containers:
    - image: mysql:5.7
      name: mysql
      env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: cloud
        - name: MYSQL_USER
          value: cloud
        - name: MYSQL_PASSWORD
          value: root
      ports:
        - containerPort: 3306
          name: mysql
      volumeMounts:
        # - name: mysql-tmp-storage
        #   mountPath: /var/lib/mysql
        - name: mysql-pv-storage
          mountPath: /var/lib/mysql
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
  volumes:
    - name: mysql-tmp-storage
      emptyDir: {}
    - name: mysql-pv-storage
      persistentVolumeClaim:
        claimName: mysql-pv-claim
    - name: mysql-initdb
      configMap:
        name: sql-init

---

apiVersion: v1
kind: Pod
metadata:
  name: debug-network-pod
spec:
  runtimeClassName: isolate
  containers:
    - command:
        - sleep
        - "36000"
      image: curlimages/curl
      name: debug-network-container
