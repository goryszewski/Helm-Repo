# apiVersion: v1
# kind: Pod
# metadata:
#   labels:
#     component: {{ .Values.ID }}-kube-controller-manager
#   name: {{ .Values.ID }}-kube-controller-manager
# spec:
#   containers:
#   - name: {{ .Values.ID }}-kube-controller-manager
#     image: {{ .Values.KubeControllerManager.containers.image }}:{{ .Values.KubeControllerManager.containers.tag }}
#     command:
#     - kube-controller-manager
#     - --allocate-node-cidrs=true
#     - --authentication-kubeconfig=/etc/kubernetes/config/kube-controller-manager.kubeconfig
#     - --authorization-kubeconfig=/etc/kubernetes/config/kube-controller-manager.kubeconfig
#     - --kubeconfig=/etc/kubernetes/config/kube-controller-manager.kubeconfig
#     - --bind-address=127.0.0.1
#     - --client-ca-file=/etc/kubernetes/pki/Kubernetes_CA.pem
#     # - --cluster-cidr=
#     - --cluster-name=kubernetes
#     - --cluster-signing-cert-file=/etc/kubernetes/pki/Kubernetes_CA.pem
#     - --cluster-signing-key-file=/etc/kubernetes/pki/Kubernetes_CA.key
#     - --controllers=*,bootstrapsigner,tokencleaner
#     - --leader-elect=true
#     - --requestheader-client-ca-file=/etc/kubernetes/pki/Kubernetes_CA.pem
#     - --root-ca-file=/etc/kubernetes/pki/Kubernetes_CA.pem
#     - --service-account-private-key-file=/etc/kubernetes/pki/service-accounts.key
#     # - --service-cluster-ip-range=
#     - --use-service-account-credentials=true
#     imagePullPolicy: IfNotPresent
#     livenessProbe:
#       failureThreshold: 8
#       httpGet:
#         host: 127.0.0.1
#         path: /healthz
#         port: 10257
#         scheme: HTTPS
#       initialDelaySeconds: 10
#       periodSeconds: 10
#       timeoutSeconds: 15
#     resources:
#       requests:
#         cpu: 200m
#     startupProbe:
#       failureThreshold: 24
#       httpGet:
#         host: 127.0.0.1
#         path: /healthz
#         port: 10257
#         scheme: HTTPS
#       initialDelaySeconds: 10
#       periodSeconds: 10
#       timeoutSeconds: 15
#     volumeMounts:
#     - mountPath: /etc/ssl/certs
#       name: ca-certs
#       readOnly: true
#     - mountPath: /etc/ca-certificates
#       name: etc-ca-certificates
#       readOnly: true
#     - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
#       name: flexvolume-dir
#     - mountPath: /etc/kubernetes/pki
#       name: k8s-certs
#       readOnly: true
#     - mountPath: /etc/kubernetes/config/kube-controller-manager.kubeconfig
#       name: kubeconfig
#       readOnly: true
#     - mountPath: /usr/local/share/ca-certificates
#       name: usr-local-share-ca-certificates
#       readOnly: true
#     - mountPath: /usr/share/ca-certificates
#       name: usr-share-ca-certificates
#       readOnly: true
#   hostNetwork: true
#   priority: 2000001000
#   priorityClassName: system-node-critical
#   securityContext:
#     seccompProfile:
#       type: RuntimeDefault
#   volumes:
#   - hostPath:
#       path: /etc/ssl/certs
#       type: DirectoryOrCreate
#     name: ca-certs
#   - hostPath:
#       path: /etc/ca-certificates
#       type: DirectoryOrCreate
#     name: etc-ca-certificates
#   - hostPath:
#       path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
#       type: DirectoryOrCreate
#     name: flexvolume-dir
#   - hostPath:
#       path: /etc/kubernetes/pki
#       type: DirectoryOrCreate
#     name: k8s-certs
#   - hostPath:
#       path: /etc/kubernetes/config/kube-controller-manager.kubeconfig
#       type: FileOrCreate
#     name: kubeconfig
#   - hostPath:
#       path: /usr/local/share/ca-certificates
#       type: DirectoryOrCreate
#     name: usr-local-share-ca-certificates
#   - hostPath:
#       path: /usr/share/ca-certificates
#       type: DirectoryOrCreate
#     name: usr-share-ca-certificates
