apiVersion: v1
kind: Namespace
metadata:
  name: python-space

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: api-test
data:
  server.py: |
    from flask import Flask

    app = Flask(__name__)

    @app.route('/')
    def hello_world():
        return 'Hello World - but override'
    
    if __name__ == '__main__':
        app.run()

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-deployment
  labels:
    app: python
spec:
  replicas: 2
  selector:
    matchLabels:
      app: python
  template:
    metadata:
      labels:
        app: python
    spec:
      containers:
      - name: python
        image: mg231223/testciself-hosted
        volumeMounts:
        - name: api-test
          mountPath: "/app"
          readOnly: true
        ports:
        - containerPort: 5000
      volumes:
      - name: api-test
        configMap:
          name: api-test


---
kind: Service
apiVersion: v1
metadata:
  name: api-test-service
spec:
  selector:
    app: python
  ports:
    - port: 5000 
---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api-test-service-ingress
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    ingress.class: "haproxy"
spec:
  rules:
  - host: pyapi.autok8s.xyz
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: api-test-service
              port:
                number: 5000
